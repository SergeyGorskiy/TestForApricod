// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestForApricod.EF;

namespace TestForApricod.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GameGameGenre", b =>
                {
                    b.Property<int>("GameGenresGameGenreId")
                        .HasColumnType("int");

                    b.Property<int>("GamesGameId")
                        .HasColumnType("int");

                    b.HasKey("GameGenresGameGenreId", "GamesGameId");

                    b.HasIndex("GamesGameId");

                    b.ToTable("GameGameGenre");
                });

            modelBuilder.Entity("TestForApricod.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GameDeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.HasIndex("GameDeveloperId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TestForApricod.Models.GameDeveloper", b =>
                {
                    b.Property<int>("GameDeveloperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GameDeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameDeveloperId");

                    b.ToTable("GameDevelopers");
                });

            modelBuilder.Entity("TestForApricod.Models.GameGenre", b =>
                {
                    b.Property<int>("GameGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GameGenreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameGenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("GameGameGenre", b =>
                {
                    b.HasOne("TestForApricod.Models.GameGenre", null)
                        .WithMany()
                        .HasForeignKey("GameGenresGameGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestForApricod.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestForApricod.Models.Game", b =>
                {
                    b.HasOne("TestForApricod.Models.GameDeveloper", "GameDeveloper")
                        .WithMany("Games")
                        .HasForeignKey("GameDeveloperId");

                    b.Navigation("GameDeveloper");
                });

            modelBuilder.Entity("TestForApricod.Models.GameDeveloper", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
